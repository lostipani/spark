version: '3.8'

services:
  loader:
    profiles: [ 'spark-test' ]
    build:
      context: ./
      dockerfile: loader/Dockerfile
    networks:
      - local-network
    environment:
      SLEEP: 0
      SPARK_MASTER: "spark://spark-master:7077"
      LOG_LEVEL: "INFO"
    depends_on:
      spark-master:
        condition: service_healthy

  spark-master:
    profiles: [ 'spark-test' ]
    build:
      context: .
      dockerfile: spark/Dockerfile
    entrypoint: [ './entrypoint.sh', 'master' ]
    networks:
      - local-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes:
      - spark-logs:/opt/spark/spark-events
    env_file:
      - spark/env.spark
    ports:
      - '9090:8080'
      - '7077:7077'

  spark-worker:
    profiles: [ 'spark-test' ]
    build:
      context: .
      dockerfile: spark/Dockerfile
    entrypoint: [ './entrypoint.sh', 'worker' ]
    networks:
      - local-network
    depends_on:
      spark-master:
        condition: service_healthy
    env_file:
      - spark/env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events

networks:
  local-network:
    driver: bridge

volumes:
  spark-logs:
